(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{437:function(a,t,s){"use strict";s.r(t);var r=s(20),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"大屏适配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大屏适配"}},[a._v("#")]),a._v(" 大屏适配")]),a._v(" "),s("h2",{attrs:{id:"分辨率及适配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分辨率及适配"}},[a._v("#")]),a._v(" 分辨率及适配")]),a._v(" "),s("h3",{attrs:{id:"像素单位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#像素单位"}},[a._v("#")]),a._v(" 像素单位")]),a._v(" "),s("h5",{attrs:{id:"设备像素dp-dip-density-independent-pixels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设备像素dp-dip-density-independent-pixels"}},[a._v("#")]),a._v(" 设备像素Dp（dip）: Density-independent Pixels")]),a._v(" "),s("p",[a._v("以160dpi的屏幕为基准定义的，在160dpi的屏幕的屏幕上1dp=1px,\n换算公式： 1dp =（屏幕ppi/ 160）px    （这里px指物理像素）")]),a._v(" "),s("h5",{attrs:{id:"ppi-像素每英寸-表示每英寸所拥有的像素-pixel-数目。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ppi-像素每英寸-表示每英寸所拥有的像素-pixel-数目。"}},[a._v("#")]),a._v(" PPI：像素每英寸，表示每英寸所拥有的像素(pixel)数目。")]),a._v(" "),s("h5",{attrs:{id:"dpi-点每英寸-表示每英寸所拥有的点数。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dpi-点每英寸-表示每英寸所拥有的点数。"}},[a._v("#")]),a._v(" DPI：点每英寸，表示每英寸所拥有的点数。")]),a._v(" "),s("p",[a._v("在电子屏幕显示中，可认为 ppi 和 dpi相同")]),a._v(" "),s("h3",{attrs:{id:"设备像素比-dpr-device-pixel-ratio"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设备像素比-dpr-device-pixel-ratio"}},[a._v("#")]),a._v(" 设备像素比（dpr： device pixel ratio ）：")]),a._v(" "),s("p",[a._v("公式：dpr = 同一方向上的 物理像素 / 逻辑像素 (缩放比是1的情况)\nDPR = 设备像素/CSS像素(设备独立像素 )\n~= DPI/160\nwindow.devicePixelRatio   // 获取dpr\nwindow.screen.width    // 获取屏幕宽度")]),a._v(" "),s("h2",{attrs:{id:"电视屏幕的页面尺寸到底是多少"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#电视屏幕的页面尺寸到底是多少"}},[a._v("#")]),a._v(" 电视屏幕的页面尺寸到底是多少")]),a._v(" "),s("h4",{attrs:{id:"小米电视"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小米电视"}},[a._v("#")]),a._v(" 小米电视")]),a._v(" "),s("p",[a._v("960*540")]),a._v(" "),s("h4",{attrs:{id:"小米盒子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小米盒子"}},[a._v("#")]),a._v(" 小米盒子")]),a._v(" "),s("p",[a._v("960*540")]),a._v(" "),s("h4",{attrs:{id:"夏普"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#夏普"}},[a._v("#")]),a._v(" 夏普")]),a._v(" "),s("p",[a._v("1280 * 720")]),a._v(" "),s("h1",{attrs:{id:"大屏技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大屏技术"}},[a._v("#")]),a._v(" 大屏技术")]),a._v(" "),s("h3",{attrs:{id:"svg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#svg"}},[a._v("#")]),a._v(" SVG")]),a._v(" "),s("p",[a._v("可缩放矢量图形（Scalable Vector Graphics），是基于可扩展标记语言（标准通用标记语言的子集）的用于描述二维矢量图形的一种图形格式。")]),a._v(" "),s("h3",{attrs:{id:"canvas-2d"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#canvas-2d"}},[a._v("#")]),a._v(" Canvas 2D")]),a._v(" "),s("p",[a._v("通过 JavaScript 来绘制 2D 图形，通过逐像素来进行渲染。")]),a._v(" "),s("h3",{attrs:{id:"canvas-3d-webgl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#canvas-3d-webgl"}},[a._v("#")]),a._v(" Canvas 3D WebGL")]),a._v(" "),s("p",[a._v("WebGL（Web Graphic Library）是一个 JavaScript API，用于在任何兼容的 Web 浏览器中渲染 3D 图形。WebGL 程序由用 JavaScript 编写的控制代码和用 OpenGL 着色语言（GLSL）编写的着色器代码构成，这种语言类似于 C 或 C++，可在 GPU 上执行。")]),a._v(" "),s("h1",{attrs:{id:"经验总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#经验总结"}},[a._v("#")]),a._v(" 经验总结")]),a._v(" "),s("h2",{attrs:{id:"内存泄露"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存泄露"}},[a._v("#")]),a._v(" 内存泄露")]),a._v(" "),s("ul",[s("li",[a._v("及时清除定时器（setTimeout、setInterval、requsetAnimationFrame）")]),a._v(" "),s("li",[a._v("事件移除（resize）")]),a._v(" "),s("li",[a._v("线上环境控制台console数据清空")]),a._v(" "),s("li",[a._v("及时清除无用变量")])]),a._v(" "),s("h2",{attrs:{id:"数据处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据处理"}},[a._v("#")]),a._v(" 数据处理")]),a._v(" "),s("ul",[s("li",[a._v("注意防御式编程，对服务端接口的稳定性与可靠性持怀疑态度，定义默认值")]),a._v(" "),s("li",[a._v("数据变动，先进行判断是否数据改变，之后再决定是否图表进行重绘，减少重绘次数")]),a._v(" "),s("li",[a._v("特殊值测试")]),a._v(" "),s("li",[a._v("Echar中Dataset数据集的使用")])]),a._v(" "),s("h2",{attrs:{id:"布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[a._v("#")]),a._v(" 布局")]),a._v(" "),s("ul",[s("li",[a._v("可视化大屏基本是整屏展示，不需要滚动条，注意展示地点。")]),a._v(" "),s("li",[a._v("动画部分最好使用css3动画，尽量少用canvas。\n可以使用CSS的动画来启用硬件加速。CSS的  animations,  transforms 以及 transitions 不会自动开启GPU加速，而是由浏览器的缓慢的软件渲染引擎来执行。\n能触发GPU加速的css属性：\n"),s("code",[a._v("transform：translate(0)")]),a._v("、"),s("code",[a._v("transform:translate3d(0,0,0)")]),a._v("、"),s("code",[a._v("opacity")]),a._v("、"),s("code",[a._v("filter")]),a._v("等等\n另外，3D硬件加速提升动画性能时，最好给元素增加一个z-index属性，人为干扰复合层的排序，可以有效减少chrome创建不必要的复合层，提升渲染性能\nPS. @keyframe必须写完整，否则移动端不起作用")]),a._v(" "),s("li",[a._v("频繁更新的部分要使用绝对定位布局，脱离文档流，减少重排重绘。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);